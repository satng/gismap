define(["./Transforms-4ee811db","./BoxGeometry-863653d7","./Matrix2-c430e55a","./Color-8d08a55c","./CylinderGeometry-4d329d77","./defaultValue-81eec7ed","./EllipsoidGeometry-1013e64a","./IndexDatatype-bed3935d","./createTaskProcessorWorker","./RuntimeError-8952249c","./ComponentDatatype-9e86ac8f","./WebGLConstants-508b9636","./_commonjsHelpers-3aae1032-26891ab7","./combine-3c023bda","./GeometryOffsetAttribute-2bff0974","./GeometryAttribute-51ed9bde","./GeometryAttributes-32b29525","./VertexFormat-7df34ea5","./CylinderGeometryLibrary-0fa93765"],(function(e,t,n,r,a,i,o,s,d,c,l,f,u,h,b,p,y,x,g){"use strict";function m(e){this.offset=e.offset,this.count=e.count,this.color=e.color,this.batchIds=e.batchIds}const C=new n.Cartesian3,I=n.Matrix4.packedLength+n.Cartesian3.packedLength,k=n.Matrix4.packedLength+2,M=n.Matrix4.packedLength+n.Cartesian3.packedLength,B=n.Cartesian3.packedLength+1,w={modelMatrix:new n.Matrix4,boundingVolume:new e.BoundingSphere};function A(e,t){let r=t*I;const a=n.Cartesian3.unpack(e,r,C);r+=n.Cartesian3.packedLength;const i=n.Matrix4.unpack(e,r,w.modelMatrix);n.Matrix4.multiplyByScale(i,a,i);const o=w.boundingVolume;return n.Cartesian3.clone(n.Cartesian3.ZERO,o.center),o.radius=Math.sqrt(3),w}function O(e,t){let r=t*k;const a=e[r++],i=e[r++],o=n.Cartesian3.fromElements(a,a,i,C),s=n.Matrix4.unpack(e,r,w.modelMatrix);n.Matrix4.multiplyByScale(s,o,s);const d=w.boundingVolume;return n.Cartesian3.clone(n.Cartesian3.ZERO,d.center),d.radius=Math.sqrt(2),w}function L(e,t){let r=t*M;const a=n.Cartesian3.unpack(e,r,C);r+=n.Cartesian3.packedLength;const i=n.Matrix4.unpack(e,r,w.modelMatrix);n.Matrix4.multiplyByScale(i,a,i);const o=w.boundingVolume;return n.Cartesian3.clone(n.Cartesian3.ZERO,o.center),o.radius=1,w}function v(e,t){let r=t*B;const a=e[r++],i=n.Cartesian3.unpack(e,r,C),o=n.Matrix4.fromTranslation(i,w.modelMatrix);n.Matrix4.multiplyByUniformScale(o,a,o);const s=w.boundingVolume;return n.Cartesian3.clone(n.Cartesian3.ZERO,s.center),s.radius=1,w}const E=new n.Cartesian3;function U(t,a,o,s,d){if(!i.defined(a))return;const c=o.length,l=s.attributes.position.values,f=s.indices,u=t.positions,h=t.vertexBatchIds,b=t.indices,p=t.batchIds,y=t.batchTableColors,x=t.batchedIndices,g=t.indexOffsets,C=t.indexCounts,I=t.boundingVolumes,k=t.modelMatrix,M=t.center;let B=t.positionOffset,w=t.batchIdIndex,A=t.indexOffset;const O=t.batchedIndicesOffset;for(let t=0;t<c;++t){const i=d(a,t),s=i.modelMatrix;n.Matrix4.multiply(k,s,s);const c=o[t],L=l.length;for(let e=0;e<L;e+=3){const t=n.Cartesian3.unpack(l,e,E);n.Matrix4.multiplyByPoint(s,t,t),n.Cartesian3.subtract(t,M,t),n.Cartesian3.pack(t,u,3*B+e),h[w++]=c}const v=f.length;for(let e=0;e<v;++e)b[A+e]=f[e]+B;const U=t+O;x[U]=new m({offset:A,count:v,color:r.Color.fromRgba(y[c]),batchIds:[c]}),p[U]=c,g[U]=A,C[U]=v,I[U]=e.BoundingSphere.transform(i.boundingVolume,s),B+=L/3,A+=v}t.positionOffset=B,t.batchIdIndex=w,t.indexOffset=A,t.batchedIndicesOffset+=c}const G=new n.Cartesian3,S=new n.Matrix4;return d((function(d,c){const l=i.defined(d.boxes)?new Float32Array(d.boxes):void 0,f=i.defined(d.boxBatchIds)?new Uint16Array(d.boxBatchIds):void 0,u=i.defined(d.cylinders)?new Float32Array(d.cylinders):void 0,h=i.defined(d.cylinderBatchIds)?new Uint16Array(d.cylinderBatchIds):void 0,b=i.defined(d.ellipsoids)?new Float32Array(d.ellipsoids):void 0,p=i.defined(d.ellipsoidBatchIds)?new Uint16Array(d.ellipsoidBatchIds):void 0,y=i.defined(d.spheres)?new Float32Array(d.spheres):void 0,x=i.defined(d.sphereBatchIds)?new Uint16Array(d.sphereBatchIds):void 0,g=i.defined(l)?f.length:0,m=i.defined(u)?h.length:0,C=i.defined(b)?p.length:0,I=i.defined(y)?x.length:0,k=t.BoxGeometry.getUnitBox(),M=a.CylinderGeometry.getUnitCylinder(),B=o.EllipsoidGeometry.getUnitEllipsoid(),w=k.attributes.position.values,E=M.attributes.position.values,V=B.attributes.position.values;let T=w.length*g;T+=E.length*m,T+=V.length*(C+I);const F=k.indices,R=M.indices,Z=B.indices;let D=F.length*g;D+=R.length*m,D+=Z.length*(C+I);const P=new Float32Array(T),_=new Uint16Array(T/3),q=s.IndexDatatype.createTypedArray(T/3,D),W=g+m+C+I,j=new Uint16Array(W),H=new Array(W),N=new Uint32Array(W),Y=new Uint32Array(W),z=new Array(W);!function(e){const t=new Float64Array(e);let r=0;n.Cartesian3.unpack(t,r,G),r+=n.Cartesian3.packedLength,n.Matrix4.unpack(t,r,S)}(d.packedBuffer);const J={batchTableColors:new Uint32Array(d.batchTableColors),positions:P,vertexBatchIds:_,indices:q,batchIds:j,batchedIndices:H,indexOffsets:N,indexCounts:Y,boundingVolumes:z,positionOffset:0,batchIdIndex:0,indexOffset:0,batchedIndicesOffset:0,modelMatrix:S,center:G};U(J,l,f,k,A),U(J,u,h,M,O),U(J,b,p,B,L),U(J,y,x,B,v);const K=function(t,n,a){const i=a.length,o=2+i*e.BoundingSphere.packedLength+1+function(e){const t=e.length;let n=0;for(let a=0;a<t;++a)n+=r.Color.packedLength+3+e[a].batchIds.length;return n}(n),s=new Float64Array(o);let d=0;s[d++]=t,s[d++]=i;for(let t=0;t<i;++t)e.BoundingSphere.pack(a[t],s,d),d+=e.BoundingSphere.packedLength;const c=n.length;s[d++]=c;for(let e=0;e<c;++e){const t=n[e];r.Color.pack(t.color,s,d),d+=r.Color.packedLength,s[d++]=t.offset,s[d++]=t.count;const a=t.batchIds,i=a.length;s[d++]=i;for(let e=0;e<i;++e)s[d++]=a[e]}return s}(q.BYTES_PER_ELEMENT,H,z);return c.push(P.buffer,_.buffer,q.buffer),c.push(j.buffer,N.buffer,Y.buffer),c.push(K.buffer),{positions:P.buffer,vertexBatchIds:_.buffer,indices:q.buffer,indexOffsets:N.buffer,indexCounts:Y.buffer,batchIds:j.buffer,packedBuffer:K.buffer}}))}));